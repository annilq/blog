// schema.prisma

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL") // uses connection pooling
  // url = env("POSTGRES_PRISMA_URL") // uses connection pooling
  // directUrl = env("POSTGRES_URL_NON_POOLING") // uses a direct connection
}

model Session {
  id        String   @id
  userId    String
  expiresAt DateTime
  user      User     @relation(references: [id], fields: [userId], onDelete: Cascade)
}

model User {
  id        String    @id @default(cuid())
  email     String?   @unique
  createdAt DateTime  @default(now()) @map(name: "created_at")
  updatedAt DateTime  @updatedAt @map(name: "updated_at")
  posts     Post[]
  username  String?
  github_id String    @unique
  sessions  Session[]

  @@map(name: "users")
}

model Post {
  id        String     @id @default(cuid())
  title     String
  content   String?
  published Boolean    @default(false)
  createdAt DateTime   @default(now()) @map(name: "created_at")
  updatedAt DateTime?   @updatedAt @map(name: "updated_at")
  author    User?      @relation(fields: [authorId], references: [id])
  authorId  String?
  categorys Category[]
}

model Category {
  id   String @id @default(cuid())
  name String
  Post Post[]
}